{"version":3,"sources":["groups.js","TreeView.js","users.js","IDbox.js","DropDown.js","settings.js","history.js","documents.js","App.js","index.js","loading.js","AutoComplete.js","ViewFilterSelector.js","pane.js","GroupFilter.js","tree.js"],"names":["rankFormatter2","cell","row","rowIndex","formatExtraData","id","uid","style","textAlign","cursor","lineHeight","href","userid","username","fontSize","color","groupBy","array","key","reduce","result","currentValue","eval","push","console","log","rankFormatter","rankFormatter3","url","uri","document","title","all","dataField","isDummyField","text","formatter","sort","filter","textFilter","dateFilter","members","Groups","state","columns","handleDataChange","dataSize","setState","rowCount","handleSearchChange","searchText","colInfos","multiColumnSearch","refs","getTableDataIgnorePaging","handleFilterChange","value","props","match","params","getstr","groupId","axios","get","headers","then","res","posts","data","rows","loading","rowcount","length","this","bind","className","marginTop","onChange","filterFactory","striped","filterPosition","bootstrap4","onDataSizeChange","hover","keyField","Component","documents","TreeView","tree","togglePane","prevState","pane_open","pane_values","toString","user","created","updated","onClosePane","Toggle","onClose","info","Super","onPanelClick","updateTree","link","enc_uri","encodeURIComponent","Users","dateObj","Date","getUTCMonth","slice","getUTCDate","getUTCFullYear","toLocaleString","hour","minute","hour12","handleSelectChange","filter_advanced","name","response","config","new_arr","Object","keys","forEach","item","links","html","DyDrop","handleChange","event","selectedOption","label","clearable","groups","options","map","option","defaultValue","group","searchable","React","Settings","mySubmitHandler","preventDefault","onSubmit","success","dropChange","myChangeHandler","nam","target","val","age","type","width","createBrowserHistory","Document","App","onChangeDrop","settingsChange","localStorage","setItem","field","st","onIDChange","getItem","to","autoFocus","path","render","ReactDOM","getElementById","LoadSpinner","height","timeout","getSuggestionValue","suggestion","AutoComplete","suggestions","renderSuggestion","onClick","e","activeSuggestion","filteredSuggestions","showSuggestions","userInput","currentTarget","innerText","toLowerCase","indexOf","onSuggestionsFetchRequested","onSuggestionsClearRequested","debounce","inputProps","placeholder","Pane","isPaneOpen","isPaneOpenLeft","Modal","setAppElement","el","ref","overlayClassName","isOpen","subtitle","substring","onRequestClose","moment","format","GroupFilter","handleAFilterChange","fieldValue","advanced_filter","count","StyledAnnotation","click_handler","create_date","modify_date","extra","incontext","GroupedAnnotations","nodeId","onKeyDown","DyTree","handleClick","prevProps","search_key","response2","itemList","x","defaultCollapseIcon","defaultExpandIcon"],"mappings":"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","file":"static/js/main.c712bde4.chunk.js","sourcesContent":["import React, { Component, useContext  } from 'react';\nimport { Button } from 'react-bootstrap-table-next';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport Dialog from 'react-bootstrap-table-next';\nimport 'react-bootstrap-table2-filter/dist/react-bootstrap-table2-filter.min.css';\nimport filterFactory, {dateFilter, textFilter} from 'react-bootstrap-table2-filter';\nimport axios from \"axios\";\nimport ViewDynamicSelect from \"./ViewFilterSelector\";\nimport LoadSpinner from \"./loading\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport GroupFilter from \"./GroupFilter\";\nimport Pane from \"./pane\";\n\nfunction rankFormatter2(cell, row, rowIndex, formatExtraData) {\n    return (\n        < div id={`${row.uid}-dropdown`}\n            style={{ textAlign: \"center\",\n                cursor: \"pointer\",\n                lineHeight: \"normal\" }}>\n            <a href={`/users/${row.userid}`} >{row.username} </a>\n            < div\n                style={{ fontSize: 20 }}\n                color=\"disabled\"\n            />\n        </div>\n    ); }\n\nconst groupBy = (array, key) => {\n                      return array.reduce((result, currentValue) => {\n                        (result[eval('currentValue.'+key)] = result[eval('currentValue.'+key)] || []).push(\n                          currentValue\n                        );\n\n                        console.log(result);\n                        return result;\n                      }, {});\n                    };\n\n\n\nfunction rankFormatter(cell, row, rowIndex, formatExtraData) {\n    return (\n        < div id={`${row.uid}-dropdown`}\n            style={{ textAlign: \"center\",\n                cursor: \"pointer\",\n                lineHeight: \"normal\" }}>\n            <a href={`/users/${row.userid}`} >{row.username} </a>\n            < div\n                style={{ fontSize: 20 }}\n                color=\"disabled\"\n            />\n        </div>\n    ); }\n\n   function rankFormatter3(cell, row, rowIndex, formatExtraData) {\n    return (\n        < div id={`${row.url}-dropdown`}\n            style={{ textAlign: \"center\",\n                cursor: \"pointer\",\n                lineHeight: \"normal\" }}>\n            <a href={`/users/${row.uri}`} >{row.document.title} </a>\n            < div\n                style={{ fontSize: 20 }}\n                color=\"disabled\"\n            />\n        </div>\n    ); }\n\n\n     let all = [\n {\n        dataField: 'UserInfo',\n        isDummyField: true,\n        text: 'other pages',\n        formatter: rankFormatter3,\n        sort: false,\n    },\n     {\n        dataField: 'user',\n        text: 'user',\n        sort: true,\n        filter: textFilter(),\n    },\n    {\n        dataField: 'text',\n        text: 'text',\n        sort: true,\n        filter: textFilter(),\n    },\n    {\n        dataField: 'updated',\n        text: 'Updat',\n        sort: true,\n        filter: dateFilter(),\n    }\n];\nlet members = [{\n                dataField: 'userid',\n                text: 'userid',\n                filter: textFilter()\n            },\n            {\n                dataField: 'username',\n                text: 'username',\n                sort: true,\n                filter: textFilter(),\n            },\n\n            {\n                dataField: 'UserInfo',\n                isDummyField: true,\n                text: 'other pages',\n                formatter: rankFormatter,\n                sort: false,\n            },\n            ];\n\n\nclass Groups extends Component {\n\n\n\n    state = {\n\n            columns: [{\n                dataField: 'userid',\n                text: 'userid',\n                filter: textFilter()\n            },\n            {\n                dataField: 'username',\n                text: 'username',\n                sort: true,\n                filter: textFilter(),\n            },\n\n            {\n                dataField: 'UserInfo',\n                isDummyField: true,\n                text: 'other pages',\n                formatter: rankFormatter,\n                sort: false,\n            },\n            ]\n    }\n    handleDataChange = ({ dataSize }) => {\n        this.setState({ rowCount: dataSize });\n    }\n    componentDidMount() {\n        //const user = useContext(UserContext);\n        //console.log(user.name);\n        //let context = this.context;\n        //console.log(context);\n        //this.context =\"eeee\";\n        var getstr = \"\";\n        const { params } = this.props.match;\n        getstr=\"https://api.hypothes.is/api/groups/\" + this.props.state.groupId +\"/members\";\n        var config = {\n          headers: {'Accept': 'application/json',  'Authorization':  'Bearer 6879-lEKYN1uJ5X_gTVo5u6avX4-jAbUcY0EMFoKsakPIfug',}\n        };\n\n        axios.get(getstr, config)\n            .then(res => {\n                const posts = res.data;\n                this.setState({\n                    loading: false,\n                    posts: posts,\n                    rowcount: posts.length\n                })\n            });\n    }\n    handleSearchChange = (searchText, colInfos, multiColumnSearch) =>{\n        //..\n        this.refs.getTableDataIgnorePaging();  //'this' is undefined and I have no idea, how do I get current cell values\n    }\n\n    handleFilterChange = (value) =>{\n        console.log(\"filter change\");\n        const { params } = this.props.match;\n        let getstr =\"\";\n        switch (value) {\n            case 'Users':\n                this.state.columns=members;\n                getstr=\"https://api.hypothes.is/api/groups/\" + this.props.state.groupId +\"/members\";\n                break;\n            case 'All':\n                this.state.columns=all;\n                getstr = \"https://api.hypothes.is/api/search?group=\"+this.props.state.groupId;\n                break;\n            default:\n            // code block\n        }\n        //const user = useContext(UserContext);\n        //console.log(user.name);\n        //let context = this.context;\n        //console.log(context);\n        //this.context =\"eeee\";\n        var config = {\n          headers: {'Accept': 'application/json',  'Authorization':  'Bearer 6879-lEKYN1uJ5X_gTVo5u6avX4-jAbUcY0EMFoKsakPIfug',}\n        };\n        console.log(\"here\");\n        axios.get(getstr, config)\n            .then(res => {\n                if (value=='All'){\n                    const posts = res.data.rows;\n                    console.log(\"posts\");\n                    console.log(posts);\n                    this.setState({\n                        loading: false,\n                        posts: posts,\n                        rowcount: posts.length\n                    })\n                }\n                else{\n                    const posts = res.data\n                    console.log(\"posts\");\n                    console.log(posts);\n                    this.setState({\n                        loading: false,\n                        posts: posts,\n                        rowcount: posts.length\n                    })\n                }\n\n            });\n\n    }\n\n    render() {\n\n\n\n        const options = {\n            onSearchChange: this.handleSearchChange.bind(this),\n            onFilterChange : this.handleSearchChange.bind(this)\n        };\n        const { posts, loading } = this.state;\n\n\n        if( !this.state.posts) {\n            // Note that you can return false it you want nothing to be put in the dom\n            // This is also your chance to render a spinner or something...\n            return <div>The responsive it not here yet!</div>\n        }\n\n        if ( this.state.posts.length === 0 ) {\n            return <div>No result found </div>;\n        }\n        else {\n\n            return (\n                <div>\n                    {loading ? (\n                        <LoadSpinner/>\n                    ) : (\n\n                        <div className=\"container\" style={{marginTop: 50}}>\n                            <GroupFilter onChange={this.handleFilterChange} />\n                            <span className=\"badge badge-default\">{this.state.posts.length} Records</span>\n                            <span className=\"badge badge-default\">{this.state.rowCount} Filtered</span>\n                            <BootstrapTable\n                                filter={filterFactory()}\n                                striped\n                                filterPosition=\"top\"\n                                bootstrap4={true}\n                                onDataSizeChange={this.handleFilterChange}\n                                hover\n                                keyField='pid'\n                                data={this.state.posts}\n                                columns={this.state.columns}>\n                            </BootstrapTable>\n                        </div>\n\n                    )}\n                </div>\n\n\n            );\n        }\n    }\n}\nexport default Groups;\n\n","import React, { Component, useContext  } from 'react';\nimport { Button } from 'react-bootstrap-table-next';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport 'react-bootstrap-table2-filter/dist/react-bootstrap-table2-filter.min.css';\nimport filterFactory, {dateFilter, textFilter} from 'react-bootstrap-table2-filter';\nimport axios from \"axios\";\nimport ViewDynamicSelect from \"./ViewFilterSelector\";\nimport LoadSpinner from \"./loading\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport GroupFilter from \"./GroupFilter\";\nimport Pane from \"./pane\";\nimport DyTree from \"./tree\";\n\nconst groupBy = (array, key) => {\n                      return array.reduce((result, currentValue) => {\n                        (result[eval('currentValue.'+key)] = result[eval('currentValue.'+key)] || []).push(\n                          currentValue\n                        );\n\n                        console.log(result);\n                        return result;\n                      }, {});\n                    };\n\n\n\nfunction rankFormatter(cell, row, rowIndex, formatExtraData) {\n    return (\n        < div id={`${row.uid}-dropdown`}\n            style={{ textAlign: \"center\",\n                cursor: \"pointer\",\n                lineHeight: \"normal\" }}>\n            <a href={`/users/${row.userid}`} >{row.username} </a>\n            < div\n                style={{ fontSize: 20 }}\n                color=\"disabled\"\n            />\n        </div>\n    ); }\n\n\n     let documents = [\n    {\n        dataField: 'uri',\n        text: 'uri',\n        sort: true,\n        filter: textFilter(),\n    },\n    {\n        dataField: 'commenters',\n        text: 'commenters',\n        sort: true,\n        filter: textFilter(),\n    }\n];\nlet members = [{\n                dataField: 'userid',\n                text: 'userid',\n                filter: textFilter()\n            },\n            {\n                dataField: 'username',\n                text: 'username',\n                sort: true,\n                filter: textFilter(),\n            },\n            {\n                dataField: 'display_name',\n                text: 'display_name',\n                sort: true,\n                filter: textFilter(),\n            },\n            {\n                dataField: 'UserInfo',\n                isDummyField: true,\n                text: 'other pages',\n                formatter: rankFormatter,\n                sort: false,\n            },\n            ];\n\n\nclass TreeView extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            pane_open: false,\n            filter:'Users',\n            pane_values: {text:'',user:'',created:'',updated:'',uri:''}\n        };\n\n    }\n\n\n\n    state = {\n\n            columns: [{\n                dataField: 'userid',\n                text: 'userid',\n                filter: textFilter()\n            },\n            {\n                dataField: 'username',\n                text: 'username',\n                sort: true,\n                filter: textFilter(),\n            },\n            {\n                dataField: 'display_name',\n                text: 'display_name',\n                sort: true,\n                filter: textFilter(),\n            },\n            {\n                dataField: 'UserInfo',\n                isDummyField: true,\n                text: 'other pages',\n                formatter: rankFormatter,\n                sort: false,\n            },\n            ]\n    }\n    handleDataChange = ( tree ) => {\n        console.log(\"tree\");\n        console.log(tree);\n\n        this.setState({\n                    loading: tree.loading,\n                    posts: tree.data,\n                    rowcount: tree.rowcount\n                })\n    }\n    componentDidMount() {\n        //const user = useContext(UserContext);\n        //console.log(user.name);\n        //let context = this.context;\n        //console.log(context);\n        //this.context =\"eeee\";\n        var getstr = \"\";\n\n        const { params } = this.props.match;\n        console.log(this.props);\n        getstr=\"https://api.hypothes.is/api/groups/\" + this.props.state.groupId +\"/members\";\n\n    }\n    handleFilterChange = (value) =>{\n        //..\n        console.log(\"filter sent\");\n        console.log(value);\n        this.setState({filter: value});\n\n    }\n    togglePane = (value) =>{\n        //..\n        console.log(\"click up\");\n        console.log(value);\n        this.setState(prevState => ({\n          pane_open: !prevState.pane_open,\n            pane_values: {text:value.text.toString(),user:value.user.toString(),created:value.created.toString(),updated:value.updated.toString(),uri:value.uri.toString()},\n        }));\n\n    }\n     onClosePane = () =>{\n        //..\n        this.setState({pane_open: false});\n\n    }\n\n\n\n    render() {\n\n        const { posts, loading } = this.state;\n\n\n\n        return (\n            <div>\n                <h2>Treeview--for details select and press a key</h2>\n                    <div className=\"container\" style={{marginTop: 50}}>\n                          <Pane Toggle={this.state.pane_open} onClose={this.onClosePane} info={this.state.pane_values}/>\n                        <GroupFilter onChange={this.handleFilterChange} />\n                        <span className=\"badge badge-default\">{ this.state.rowcount ? this.state.rowcount  : \"0\" } Records</span>\n                        <span className=\"badge badge-default\">{this.state.rowCount} Filtered</span>\n                        <DyTree Super={this.props} onPanelClick={this.togglePane} filter={this.state.filter} updateTree={this.handleDataChange}/>\n                    </div>\n            </div>\n\n\n        );\n\n    }\n}\nexport default TreeView;\n\n","import React, { Component, useContext  } from 'react';\nimport { Button } from 'react-bootstrap-table-next';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport Dialog from 'react-bootstrap-table-next';\nimport 'react-bootstrap-table2-filter/dist/react-bootstrap-table2-filter.min.css';\nimport filterFactory, {dateFilter, textFilter} from 'react-bootstrap-table2-filter';\nimport axios from \"axios\";\nimport ViewDynamicSelect from \"./ViewFilterSelector\";\nimport LoadSpinner from \"./loading\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\n\n\n\nfunction rankFormatter(cell, row, rowIndex, formatExtraData) {\n    return (\n        < div id={`${row.uid}-dropdown`}\n            style={{ textAlign: \"center\",\n                cursor: \"pointer\",\n                lineHeight: \"normal\" }}>\n            <a href={row.link} >{row.title} </a>\n            < div\n                style={{ fontSize: 20 }}\n                color=\"disabled\"\n            />\n        </div>\n    ); }\n\nfunction rankFormatter2(cell, row, rowIndex, formatExtraData) {\n        const enc_uri = encodeURIComponent(row.uri);\n    return (\n        < div id={`${row.uri}-dropdown`}\n            style={{ textAlign: \"center\",\n                cursor: \"pointer\",\n                lineHeight: \"normal\" }}>\n            <a href={`/document/`+enc_uri} >{row.uri} </a>\n            < div\n                style={{ fontSize: 20 }}\n                color=\"disabled\"\n            />\n        </div>\n    ); }\n\n\nclass Users extends Component {\n\n\n\n    state = {\n\n    columns: [\n            {\n                dataField: 'created',\n                text: 'date',\n                sort: true,\n                filter: dateFilter(),\n                formatter: (cell) => {\n                  let dateObj = cell;\n                  if (typeof cell !== 'object') {\n                    dateObj = new Date(cell);\n                  }\n                  return `${('0' + (dateObj.getUTCMonth() + 1)).slice(-2)}/${('0' + dateObj.getUTCDate()).slice(-2)}/${dateObj.getUTCFullYear() }`;\n                }\n            },\n            {\n                dataField: 'created',\n                text: 'time',\n                sort: true,\n                formatter: (cell) => {\n                  let dateObj = cell;\n                  if (typeof cell !== 'object') {\n                    dateObj = new Date(cell);\n                  }\n                  return `${ dateObj.toLocaleString('en-US', { hour: 'numeric',minute:'numeric', hour12: true })}`;\n                }\n            },\n\n            {\n                dataField: 'Document',\n                isDummyField: true,\n                text: 'Document',\n                formatter: rankFormatter,\n                sort: false,\n            },\n            {\n                dataField: 'Document2',\n                isDummyField: true,\n                text: 'Document Annotations',\n                formatter: rankFormatter2,\n                sort: false,\n            },\n            {\n                dataField: 'text',\n                text: 'text',\n                sort: true,\n                filter: textFilter(),\n            },\n            ]\n    }\n    handleDataChange = ({ dataSize }) => {\n        this.setState({ rowCount: dataSize });\n    }\n    componentDidMount() {\n        //const user = useContext(UserContext);\n        //console.log(user.name);\n        //let context = this.context;\n        //console.log(context);\n        //this.context =\"eeee\";\n        var getstr = \"\";\n\n        const { params } = this.props.match;\n        getstr=\"https://api.hypothes.is/api/search?user=\"+params.uid;\n        var config = {\n          headers: {'Accept': 'application/json',  'Authorization':  'Bearer 6879-lEKYN1uJ5X_gTVo5u6avX4-jAbUcY0EMFoKsakPIfug',}\n        };\n\n        axios.get(getstr, config)\n            .then(res => {\n                const posts = res.data.rows;\n                let new_arr=[];\n                Object.keys(res.data.rows).forEach(function (item) {\n                    console.log(item); // key\n                    console.log(res.data.rows[item]); // value\n                    new_arr.push({title: res.data.rows[item].document.title,link: res.data.rows[item].links.html,created:res.data.rows[item].created,text:res.data.rows[item].text,uri:res.data.rows[item].uri})\n                });\n                axios.get(\"https://api.hypothes.is/api/users/\"+ params.uid, config)\n                    .then(res => {\n                        const posts = res.data.rows;\n                        let new_arr=[];\n                        Object.keys(res.data.rows).forEach(function (item) {\n                            console.log(\"item\");\n                            console.log(item); // key\n                            console.log(res.data.rows[item]); // value\n                            new_arr.push({title: res.data.rows[item].document.title,link: res.data.rows[item].links.html,created:res.data.rows[item].created,text:res.data.rows[item].text,uri:res.data.rows[item].uri})\n                        });\n                        this.setState({\n                            loading: false,\n                            posts: new_arr,\n                            rowcount: posts.length,\n                        })\n                });\n\n\n                this.setState({\n                    loading: false,\n                    posts: new_arr,\n                    rowcount: posts.length\n                })\n            });\n\n    }\n    handleSearchChange = (searchText, colInfos, multiColumnSearch) =>{\n        //..\n        this.refs.getTableDataIgnorePaging();  //'this' is undefined and I have no idea, how do I get current cell values\n    }\n\n    handleSelectChange = (params,filter_advanced) => {\n        let getstr=\"\";\n\n        let filter = params[0].name;\n        let filter_text = params[0].filter;\n\n        getstr = \"https://api.hypothes.is/api/groups/arVX9DZ4/members\";\n\n        const headers = {\n          'Accept': 'application/json',\n          'Authorization':  'Bearer 6879-lEKYN1uJ5X_gTVo5u6avX4-jAbUcY0EMFoKsakPIfug',\n        }\n        console.log(\"here\");\n\n        this.setState({loading: true}, () => {\n            axios.get(getstr, { headers: headers })\n                .then(result => this.setState({\n                    loading: false,\n                    posts: result.data.response,\n                    rowcount: result.data.response.length\n                }));\n        });\n\n\n    }\n\n    render() {\n\n        const { params } = this.props.match;\n\n        const options = {\n            onSearchChange: this.handleSearchChange.bind(this),\n            onFilterChange : this.handleSearchChange.bind(this)\n        };\n        const { posts, loading } = this.state;\n\n        console.log(\"posts\");\n        console.log(posts);\n        if( !this.state.posts) {\n            // Note that you can return false it you want nothing to be put in the dom\n            // This is also your chance to render a spinner or something...\n            return <div>The responsive it not here yet!</div>\n        }\n\n        if ( this.state.posts.length === 0 ) {\n            return <div>No result found </div>;\n        }\n        else {\n\n            return (\n                <div>\n                    {loading ? (\n                        <LoadSpinner/>\n                    ) : (\n                        <div className=\"container\" style={{marginTop: 50}}>\n                            <h2>User View</h2>\n                            <span className=\"badge badge-default\">{this.state.posts.length} Records</span>\n                            <span className=\"badge badge-default\">{this.state.rowCount}</span>\n                             <span className=\"badge badge-primary\">User:{params.uid}</span>\n                            <BootstrapTable\n                                filter={filterFactory()}\n                                striped\n                                filterPosition=\"top\"\n                                bootstrap4={true}\n                                onDataSizeChange={this.handleDataChange}\n                                hover\n                                keyField='pid'\n                                data={this.state.posts}\n                                columns={this.state.columns}>\n                            </BootstrapTable>\n                        </div>\n\n                    )}\n                </div>\n\n\n            );\n        }\n    }\n}\nexport default Users;\n\n","\nimport React, { Component } from 'react';\nimport  'react-bootstrap';\n\nclass idBox extends Component {\n    constructor(props){\n        super(props)\n    }\n    render() {\n        return (\n            <input type=\"text\" autoFocus=\"autofocus\" onChange={this.props.idChange}/>\n        );\n    }\n}\nexport default idBox;","import React from 'react';\nimport Select from 'react-select';\nimport axios from \"axios\";\n\nclass DyDrop extends React.Component {\n    constructor(props) {\n    super(props);\n    this.state = {\n        selectedOption: '',\n        value: '',\n        clearable: true,\n        groups: [],\n     }\n   }\n   componentDidMount() {\n        var config = {\n          headers: {'Accept': 'application/json',  'Authorization':  'Bearer 6879-lEKYN1uJ5X_gTVo5u6avX4-jAbUcY0EMFoKsakPIfug',}\n        };\n         axios.get(\"https://api.hypothes.is/api/profile/groups\", config)\n            .then(res => {\n                const posts = res.data.rows;\n                let new_arr=[];\n                console.log(res.data);\n                Object.keys(res.data).forEach(function (item) {\n                    console.log(item); // key\n                    console.log(res.data[item]); // value\n                    new_arr.push({name:res.data[item].name,id:res.data[item].id});\n                });\n                this.setState({groups: new_arr});\n        });\n   }\n   handleChange = (event) => {\n        console.log(event);\n        this.setState({value: event.value});\n        this.setState({selectedOption: event.label});\n        this.props.onChange({name: event.label,value: event.value});\n    }\n\n\n   render(){\n        let options = this.state.groups.map(function (option) {\n            return { value: option.id, label: option.name };\n        })\n         return (\n              <div>\n                   <Select\n                        name=\"form-field-name\"\n                        defaultValue={{ label: this.props.value.group, value: this.props.value.groupId }}\n                        onChange={this.handleChange}\n                        clearable={this.state.clearable}\n                        searchable={this.state.searchable}\n                        options={options}\n                    />\n              </div>\n          )\n        }\n}\nexport default DyDrop;","import React, { Component, useContext  } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport styled from 'styled-components';\nimport DyDrop from \"./DropDown\";\n\n//https://programmingwithmosh.com/react/localstorage-react/\nclass Settings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      key: '',\n      group: null,\n      groupId: null,\n      success: false,\n    };\n  }\n  mySubmitHandler = (event) => {\n    event.preventDefault();\n    this.props.onSubmit(this.state);\n    this.setState({success:true})\n\n  }\n  componentWillMount() {\n      this.setState({'key':this.props.state.key})\n      this.setState({'group':this.props.state.group})\n      this.setState({'groupId':this.props.state.groupId})\n      this.state.success=false;\n  }\n  componentDidMount() {\n\n  }\n  dropChange = (value) => {\n    this.setState({'group': value.name});\n    this.setState({'groupId': value.value});\n  }\n  myChangeHandler = (event) => {\n    let nam = event.target.name;\n    let val = event.target.value;\n    this.setState({[nam]: val});\n  }\n  render() {\n    return (\n\n        <div className=\"container\">\n          <div className=\"row\">\n          <form onSubmit={this.mySubmitHandler}>\n            <h1>Hello {this.state.username} {this.state.age}</h1>\n            <p>Enter your Dev Key:</p>\n            <input\n              type='text'\n              name='key'\n              style={{ width: \"500px\" }}\n              value={this.state.key}\n              onChange={this.myChangeHandler}\n            />\n            <p>Default Group:</p>\n            <DyDrop value={{groupId:this.props.state.groupId,group:this.props.state.group}} onChange={this.dropChange} />\n            <br/>\n            {this.state.success\n              ? <div className=\"alert alert-success\"><strong>Success!</strong></div>\n                : <span></span>\n            }\n            <br/>\n            <input type='submit'/>\n            </form>\n          </div>\n\n        </div>\n\n    );\n  }\n}\n\nexport default Settings;\n\n","// src/history.js\n\nimport { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","import React, { Component, useContext  } from 'react';\nimport { Button } from 'react-bootstrap-table-next';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport Dialog from 'react-bootstrap-table-next';\nimport 'react-bootstrap-table2-filter/dist/react-bootstrap-table2-filter.min.css';\nimport filterFactory, {dateFilter, textFilter} from 'react-bootstrap-table2-filter';\nimport axios from \"axios\";\nimport ViewDynamicSelect from \"./ViewFilterSelector\";\nimport LoadSpinner from \"./loading\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\n\n\n\nfunction rankFormatter(cell, row, rowIndex, formatExtraData) {\n    return (\n        < div id={`${row.uid}-dropdown`}\n            style={{ textAlign: \"center\",\n                cursor: \"pointer\",\n                lineHeight: \"normal\" }}>\n            <a href={row.link} >{row.title} </a>\n            < div\n                style={{ fontSize: 20 }}\n                color=\"disabled\"\n            />\n        </div>\n    ); }\n\n\n\nclass Document extends Component {\n\n\n\n    state = {\n\n    columns: [\n            {\n                dataField: 'created',\n                text: 'date',\n                sort: true,\n                filter: dateFilter(),\n                formatter: (cell) => {\n                  let dateObj = cell;\n                  if (typeof cell !== 'object') {\n                    dateObj = new Date(cell);\n                  }\n                  return `${('0' + (dateObj.getUTCMonth() + 1)).slice(-2)}/${('0' + dateObj.getUTCDate()).slice(-2)}/${dateObj.getUTCFullYear() }`;\n                }\n            },\n            {\n                dataField: 'created',\n                text: 'time',\n                sort: true,\n                formatter: (cell) => {\n                  let dateObj = cell;\n                  if (typeof cell !== 'object') {\n                    dateObj = new Date(cell);\n                  }\n                  return `${ dateObj.toLocaleString('en-US', { hour: 'numeric',minute:'numeric', hour12: true })}`;\n                }\n            },\n\n            {\n                dataField: 'Document',\n                isDummyField: true,\n                text: 'Document',\n                formatter: rankFormatter,\n                sort: false,\n            },\n            {\n                dataField: 'text',\n                text: 'text',\n                sort: true,\n                filter: textFilter(),\n            },\n            ]\n    }\n    handleDataChange = ({ dataSize }) => {\n        this.setState({ rowCount: dataSize });\n    }\n    componentDidMount() {\n        //const user = useContext(UserContext);\n        //console.log(user.name);\n        //let context = this.context;\n        //console.log(context);\n        //this.context =\"eeee\";\n        var getstr = \"\";\n        console.log(\"mounting\");\n\n        const { params } = this.props.match;\n        console.log(\"params\");\n        console.log(params);\n        getstr=\"https://api.hypothes.is/api/search?uri=\"+params.uri;\n        var config = {\n          headers: {'Accept': 'application/json',  'Authorization':  'Bearer 6879-lEKYN1uJ5X_gTVo5u6avX4-jAbUcY0EMFoKsakPIfug',}\n        };\n\n        axios.get(getstr, config)\n            .then(res => {\n                const posts = res.data.rows;\n                let new_arr=[];\n                Object.keys(res.data.rows).forEach(function (item) {\n                    console.log(item); // key\n                    console.log(res.data.rows[item]); // value\n                    new_arr.push({title: res.data.rows[item].document.title,link: res.data.rows[item].links.html,created:res.data.rows[item].created,text:res.data.rows[item].text})\n                });\n                axios.get(\"https://api.hypothes.is/api/users/\"+ params.uid, config)\n                    .then(res => {\n                        const posts = res.data.rows;\n                        let new_arr=[];\n                        Object.keys(res.data.rows).forEach(function (item) {\n                            console.log(item); // key\n                            console.log(res.data.rows[item]); // value\n                            new_arr.push({title: res.data.rows[item].document.title,link: res.data.rows[item].links.html,created:res.data.rows[item].created,text:res.data.rows[item].text})\n                        });\n                        this.setState({\n                            loading: false,\n                            posts: new_arr,\n                            rowcount: posts.length,\n                        })\n                });\n\n\n                this.setState({\n                    loading: false,\n                    posts: new_arr,\n                    rowcount: posts.length\n                })\n            });\n\n    }\n    handleSearchChange = (searchText, colInfos, multiColumnSearch) =>{\n        //..\n        this.refs.getTableDataIgnorePaging();  //'this' is undefined and I have no idea, how do I get current cell values\n    }\n\n    handleSelectChange = (params,filter_advanced) => {\n        let getstr=\"\";\n\n        let filter = params[0].name;\n        let filter_text = params[0].filter;\n\n        getstr = \"https://api.hypothes.is/api/groups/arVX9DZ4/members\";\n\n        const headers = {\n          'Accept': 'application/json',\n          'Authorization':  'Bearer 6879-lEKYN1uJ5X_gTVo5u6avX4-jAbUcY0EMFoKsakPIfug',\n        }\n        console.log(\"here\");\n\n        this.setState({loading: true}, () => {\n            axios.get(getstr, { headers: headers })\n                .then(result => this.setState({\n                    loading: false,\n                    posts: result.data.response,\n                    rowcount: result.data.response.length\n                }));\n        });\n\n\n    }\n\n    render() {\n\n        const { params } = this.props.match;\n\n        const options = {\n            onSearchChange: this.handleSearchChange.bind(this),\n            onFilterChange : this.handleSearchChange.bind(this)\n        };\n        const { posts, loading } = this.state;\n\n\n        if( !this.state.posts) {\n            // Note that you can return false it you want nothing to be put in the dom\n            // This is also your chance to render a spinner or something...\n            return <div>The responsive it not here yet!</div>\n        }\n\n        if ( this.state.posts.length === 0 ) {\n            return <div>No result found </div>;\n        }\n        else {\n\n            return (\n                <div>\n                    {loading ? (\n                        <LoadSpinner/>\n                    ) : (\n                        <div className=\"container\" style={{marginTop: 50}}>\n                            <h2>Document View</h2>\n                            <span className=\"badge badge-default\">{this.state.posts.length} Records</span>\n                            <span className=\"badge badge-default\">{this.state.rowCount}</span>\n                             <span className=\"badge badge-primary\">User:{params.uid}</span>\n                            <BootstrapTable\n                                filter={filterFactory()}\n                                striped\n                                filterPosition=\"top\"\n                                bootstrap4={true}\n                                onDataSizeChange={this.handleDataChange}\n                                hover\n                                keyField='pid'\n                                data={this.state.posts}\n                                columns={this.state.columns}>\n                            </BootstrapTable>\n                        </div>\n\n                    )}\n                </div>\n\n\n            );\n        }\n    }\n}\nexport default Document;\n\n","import React, { Component } from 'react';\nimport { Route, Link,Router } from 'react-router-dom';\nimport './App.css';\nimport Users from \"./users\";\nimport Moment from 'moment';\nimport idBox from \"./IDbox\";\nimport Groups from \"./groups\";\nimport Settings from \"./settings\";\nimport Select from 'react-select';\nimport DyDrop from \"./DropDown\";\nimport history from './history';\nimport DyTree from \"./tree\";\nimport Pane from \"./pane\"\nimport TreeView from \"./TreeView\";\nimport Document from \"./documents\";\n\n\nconst Home = () => (\n    <div>\n        <h2> Home </h2>\n    </div>\n);\n\nconst Airport = () => (\n    <div>\n        <ul>\n            <li>Jomo Kenyatta</li>\n            <li>Tambo</li>\n            <li>Murtala Mohammed</li>\n        </ul>\n    </div>\n);\n\nconst City = () => (\n    <div>\n        <ul>\n            <li>San Francisco</li>\n            <li>Istanbul</li>\n            <li>Tokyo</li>\n        </ul>\n    </div>\n);\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n\n        console.log(\"start\"); // [\"name\"]\n        const key = localStorage.key;\n        const group = localStorage.group;\n        const groupId = localStorage.groupId;\n        this.state = {\n            key: key,\n            group: group ? group: \" \",\n            groupId: groupId ? groupId: \" \",\n        };\n\n    }\n        onChangeDrop = (value) =>\n    {\n        console.log(\"event\");\n        this.setState({ group: value});\n\n    }\n       settingsChange = (value) =>\n    {\n        console.log(\"here\");\n        const { key, group,groupId } = value;\n        localStorage.setItem('key', key);\n        localStorage.setItem('group', group);\n        localStorage.setItem('groupId', groupId);\n        //this.setState({ group: group});\n        //this.setState({ groupId: groupId});\n        this.setState({ key: key});\n        console.log(\"here2\");\n\n    }\n\n    componentDidMount() {\n        const key = localStorage.getItem('key');\n        const group = localStorage.getItem('group');\n        const groupId = localStorage.getItem('groupId');\n        this.setState({ group: group});\n        this.setState({ groupId: groupId});\n        this.setState({ key: key});\n\n    }\n    handleChange = (field, value) =>{\n\n\n    }\n     onSubmit = (st) =>\n    {\n        const { key, group,groupId } = st;\n        localStorage.setItem('key', key);\n        localStorage.setItem('group', group);\n        localStorage.setItem('groupId', groupId);\n        this.setState({ group: group});\n        this.setState({ groupId: groupId});\n        this.setState({ key: key});\n    }\n\n    onIDChange = (event) =>\n    {\n        this.setState({ uid: event.target.value });\n    }\n    render() {\n        return (\n            <div>\n                <nav className=\"navbar navbar-expand-lg navbar-light  bg-light\">\n                    <ul className=\"navbar-nav\">\n                        <li className=\"nav-item\">\n                             <Link className=\"nav-link\" to=\"groups\">Table</Link>\n                        </li>\n                         <li className=\"nav-item\">\n                             <Link className=\"nav-link\" to=\"users\">Users</Link>\n                        </li>\n                         <li className=\"nav-item\">\n                             <Link className=\"nav-link\" to=\"tree\">Tree</Link>\n                        </li>\n                        <li className=\"nav-item\">\n                             <Link className=\"nav-link\" to=\"settings\">Settings</Link>\n                        </li>\n                    </ul>\n                    <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\n                        <ul className=\"navbar-nav ml-auto\">\n                            <li className=\"nav-item\">\n                            <DyDrop onChange={this.onChangeDrop} value={{group:this.state.group,groupId:this.state.groupId}} /><input type=\"text\" value={this.state.key+\"a\"} autoFocus=\"autofocus\" onChange={this.onIDChange}/>\n                            </li>\n                        </ul>\n                    </div>\n                </nav>\n                <Route path=\"/users/:uid?\" render={(props) => <Users {...props} state={this.state} />} />\n                <Route path=\"/document/:uri?\" render={(props) => <Document {...props} state={this.state} />} />\n                <Route path=\"/groups/:gid?\" render={(props) => <Groups {...props} state={this.state} />} />\n                <Route path=\"/tree/:gid?/:uid?\" render={(props) => <TreeView {...props} state={this.state} />} />\n                <Route path=\"/settings\" render={(props) => <Settings {...props} onSubmit={this.settingsChange} state={this.state} />} />\n            </div>\n\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '@devexpress/dx-react-grid-bootstrap4/dist/dx-react-grid-bootstrap4.css';\n// Put any other imports below so that CSS from your\n// components takes precedence over default styles.\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-daterangepicker/daterangepicker.css'\nimport '../node_modules/react-bootstrap-toggle/dist/react-bootstrap2-toggle.js'\nimport '../node_modules/react-bootstrap-toggle/dist/bootstrap2-toggle.css'\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>, document.getElementById('root'));","import Loader from 'react-loader-spinner'\nimport React, { Component } from 'react';\nexport default class LoadSpinner extends React.Component {\n    //other logic\n    render() {\n        return(\n            <Loader\n                type=\"Puff\"\n                color=\"#00BFFF\"\n                height={100}\n                width={100}\n                timeout={3000} //3 secs\n\n            />\n        );\n    }\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Autosuggest from 'react-autosuggest'\nimport axios from 'axios'\nimport { debounce } from 'throttle-debounce'\nimport Moment from 'moment';\n\n//import './styles.css'\n\nfunction getSuggestionValue(suggestion) {\n    console.log(\"suggestion-value\");\n    console.log(suggestion);\n    this.props.onSubmit(\"suggestion\");\n    return suggestion.name;\n}\n\n\nclass AutoComplete extends React.Component {\n  state = {\n    value: '',\n    suggestions: []\n  }\n\n  componentWillMount() {\n    this.onSuggestionsFetchRequested = debounce(\n      500,\n      this.onSuggestionsFetchRequested\n    )\n  }\n  renderSuggestion = suggestion => {\n      console.log(\"render\");\n      this.setState({ value: suggestion.name });\n       this.setState({ id: suggestion.id});\n    return (\n      <div className=\"result\">\n        <div>{suggestion.name}</div>\n      </div>\n    )\n  }\n  // Event fired when the user clicks on a suggestion\n  onClick = e => {\n    // Update the user input and reset the rest of the state\n    this.setState({\n      activeSuggestion: 0,\n      filteredSuggestions: [],\n      showSuggestions: false,\n      userInput: e.currentTarget.innerText\n    });\n  };\n /* onChange = (event, { newValue }) => {\n    //let obj = this.state.suggestion.find(obj => obj.name == newValue);\n    this.setState({ value: newValue })\n\n  }*/\n  onChange = e => {\n    const { suggestions } = this.props.suggestion;\n    const userInput = e.currentTarget.value;\n\n    // Filter our suggestions that don't contain the user's input\n    const filteredSuggestions = suggestions.filter(\n      suggestion =>\n        suggestion.name.toLowerCase().indexOf(userInput.toLowerCase()) > -1\n    );\n\n    // Update the user input and filtered suggestions, reset the active\n    // suggestion and make sure the suggestions are shown\n    this.setState({\n      activeSuggestion: 0,\n      filteredSuggestions,\n      showSuggestions: true,\n      userInput: e.currentTarget.value\n    });\n  };\n\n\nonSuggestionsFetchRequested = ({ value }) => {\n\n         let getstr = 'https://api.hypothes.is/api/profile/groups';\n\n         var config = {\n          headers: {'Accept': 'application/json',  'Authorization':  'Bearer 6879-lEKYN1uJ5X_gTVo5u6avX4-jAbUcY0EMFoKsakPIfug',}\n        };\n\n         axios.get(\"https://api.hypothes.is/api/profile/groups\", config)\n            .then(res => {\n                const posts = res.data.rows;\n                let new_arr=[];\n                console.log(res.data);\n                Object.keys(res.data).forEach(function (item) {\n                    console.log(item); // key\n                    console.log(res.data[item]); // value\n                    new_arr.push({name:res.data[item].name,id:res.data[item].id});\n                });\n                this.setState({suggestions: new_arr});\n        });\n\n\n\n}\n\n  onSuggestionsClearRequested = () => {\n    this.setState({ suggestions: [] })\n  }\n\n  render() {\n    const { value, suggestions } = this.state\n\n    const inputProps = {\n      placeholder: 'Name',\n      value,\n      onChange: this.onChange\n    }\n\n    return (\n      <div className=\"as\">\n        <Autosuggest\n          suggestions={suggestions}\n          onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n          onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n          getSuggestionValue={getSuggestionValue}\n          renderSuggestion={this.renderSuggestion}\n          inputProps={inputProps}\n        />\n      </div>\n    )\n  }\n}\nexport default AutoComplete;","import React, {Component} from 'react';\nimport AutoComplete from './AutoComplete'\nimport Toggle from 'react-bootstrap-toggle';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport {FormControl, FormGroup, DropdownButton,Dropdown} from 'react-bootstrap';\n\nlet filter =\"\";\nclass ViewDynamicSelect extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            toggleActive: false,\n            advanced_filter: 'all'\n\n        };\n        //this.onToggle = this.onToggle.bind(this);\n    }\n\n    //On the change event for the select box pass the selected value back to the parent\n    onChange = (event) =>\n    {\n        console.log(\"event\");\n        console.log(event);\n        const fieldName = event.target.name;\n        const fieldValue = event.target.value;\n        this.setState({[fieldName]: fieldValue});\n        //this.props.onSelectChange(fieldName, fieldValue);\n\n    }\n    onToggle = (value) =>\n    {\n        this.setState({ toggleActive: !this.state.toggleActive });\n    }\n\n    onChange_autocomplete = (value) =>\n    {\n        const fieldName = \"filter_text\";\n        const fieldValue = value;\n        this.setState({[fieldName]: fieldValue});\n        //this.props.onSelectChange(fieldName, fieldValue);\n        return value;\n\n\n    }\n    onSubmit = () =>\n    {\n\n        var params = [];\n        if(this.state.filter_type && this.state.filter_text){\n            params.push({name: this.state.filter_type, filter: this.state.filter_text});\n        }\n\n        this.props.onSelectChange(params, this.state.advanced_filter);\n\n    }\n    handleAFilterChange = (value) => {\n        const fieldName = \"advanced_filter\";\n        const fieldValue = value;\n        this.setState({[fieldName]: fieldValue});\n    }\n\n\n    render(){\n        let arrayOfData = this.props.arrayOfData;\n        let options = arrayOfData.map((data) =>\n            <option\n                key={data.id}\n                value={data.id}\n            >\n                {data.name}\n            </option>\n        );\n        return (\n            <div>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-1\">\n                            <div className=\"panel panel-blue\">\n                                <Toggle\n                                    onClick={this.onToggle}\n                                    on={<small>Match Search</small>}\n                                    off={<small>Fuzzy</small>}\n                                    size=\"xs\"\n                                    width=\"80px\"\n                                    offstyle=\"info\"\n                                    active={this.state.toggleActive}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"col-lg-4\">\n                            <div class=\"ig1\">\n                                 <AutoComplete name=\"filter_text\" filter_type={this.state.filter_type} use={this.state.toggleActive} uid={this.props.uid}  onSubmit={this.onChange_autocomplete.bind(this)}  />\n                                 <select  name=\"filter_type\" className=\"custom-search-select selectpicker\" onChange={this.onChange.bind(this)}>\n                                <option>Select Item</option>\n                                {options}\n                            </select>\n                            </div>\n                        </div>\n                        <div className=\"col-lg-3\">\n                            <div className=\"panel panel-purple\">\n\n                                <span>     </span>\n                                <button onClick={this.onSubmit}>Search</button>\n\n                            </div>\n                        </div>\n                        <div className=\"col-lg-3\">\n                            <span>     </span>\n                            <ToggleButtonGroup\n                                type='radio'\n                                name='genre'\n                                defaultValue={['individual']}\n                                onChange={this.handleAFilterChange}\n                            >\n                                <ToggleButton value={'individual'}>Individual Views</ToggleButton>\n                                <ToggleButton value={'user'}>Users Views</ToggleButton>\n                                <ToggleButton value={'group'}>Group Pages</ToggleButton>\n                            </ToggleButtonGroup>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        )\n    }\n}\n\nexport default ViewDynamicSelect;","import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport Modal from 'react-modal';\nimport SlidingPane from 'react-sliding-pane';\nimport 'react-sliding-pane/dist/react-sliding-pane.css'\nimport * as moment from 'moment'\nimport Icon from '@material-ui/core/Icon';\nimport Typography from '@material-ui/core/Typography';\n\n\nclass Pane extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isPaneOpen: false,\n            isPaneOpenLeft: false\n        };\n    }\n\n    componentDidMount() {\n        Modal.setAppElement(this.el);\n    }\n\n    render() {\n        return <div ref={ref => this.el = ref}>\n            <SlidingPane\n                className='some-custom-class'\n                overlayClassName='some-custom-overlay-class'\n                isOpen={ this.props.Toggle}\n                title='Text'\n                subtitle={this.props.info.user.substring(5,20)+\"...\"}\n                width='280px'\n                onRequestClose={ () => {\n                    // triggered on \"<\" on left top click or on outside click\n                    this.setState({ isPaneOpen: false });\n                    this.props.onClose();\n                } }>\n                <div className=\"times\">\n                <div className=\"t1\" ><small><Icon>access_time</Icon><span className=\"time\">{moment(new Date(this.props.info.created)).format(\"MM/DD/YYYY hh:mm:ss\")}</span></small></div>\n                <div className=\"t1\" ><small><Icon>timelapse</Icon><span className=\"time\">{moment(new Date(this.props.info.updated)).format(\"MM/DD/YYYY hh:mm:ss\")}</span></small></div>\n                </div>\n                <hr />\n                <div>{this.props.info.text }</div>\n                <br/>\n            </SlidingPane>\n        </div>;\n    }\n\n}\nexport default Pane;\n\n","import React, {Component} from 'react';\nimport Toggle from 'react-bootstrap-toggle';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport {FormControl, FormGroup, DropdownButton,Dropdown} from 'react-bootstrap';\n\nlet filter =\"\";\nclass GroupFilter extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            advanced_filter: 'Members',\n\n        };\n        //this.onToggle = this.onToggle.bind(this);\n    }\n    handleAFilterChange = (value) => {\n        const fieldName = \"advanced_filter\";\n        const fieldValue = value;\n        this.setState({[fieldName]: fieldValue});\n        this.props.onChange(fieldValue);\n    }\n    render(){\n        return (\n            <div>\n\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-1\">\n                        </div>\n                        <div className=\"col-lg-4\">\n                            <div className=\"ig1\">\n                            </div>\n                            <div className=\"ig1\">\n                            </div>\n                        </div>\n                        <div className=\"col-lg-3\">\n                        </div>\n                        <div className=\"col-lg-3\">\n                            <span>     </span>\n\n                            <ToggleButtonGroup\n                                type='radio'\n                                name='genre'\n                                defaultValue={['Users']}\n                                onChange={this.props.onChange}\n                            >\n                                <ToggleButton value={'Users'}>By Users</ToggleButton>\n                                <ToggleButton value={'Document'}>By Document</ToggleButton>\n                                <ToggleButton value={'All'}>By All</ToggleButton>\n                            </ToggleButtonGroup>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n        )\n    }\n}\n\nexport default GroupFilter;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TreeView from '@material-ui/lab/TreeView';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport TreeItem from '@material-ui/lab/TreeItem';\nimport * as moment from 'moment'\nimport axios from \"axios\";\nimport { Manager, Reference, Popper } from 'react-popper';\n\nlet count =0;\n\nconst StyledAnnotation = ({data,click_handler}) => {\n    console.log('iiiin');\n    console.log(data);\n    console.log(data.uri);\n    console.log(\"out\");\n    const create_date = new moment(data.created).format('MM/DD');\n    const modify_date = new moment(data.updated).format('MM/DD');\n   // var lastPart = data.uri.split(\"/\").pop();\n    //lastPart=lastPart.substring(36);\n    const extra = data.text.length>38 ? \"...\" : \"\"\n  return (\n      <div className=\"blurb\"><div className=\"row\">\n              <div className=\"col-4\"><a href={data.links.incontext}>{data.document.title}</a></div>\n              <div className=\"col-1\"><a href={data.links.incontext}>Document</a></div>\n              <div className=\"col-3\">{data.user.substring(5)}</div>\n              <div className=\"col-2\">{create_date} - {modify_date}</div>\n              <div className=\"col-2\">{data.text.substring(0,38)+ extra }</div>\n          </div>\n\n      </div>\n\n  )\n}\n\nconst GroupedAnnotations = ({ data,click_handler}) => {\n    console.log(\"data\");\n    console.log(data);\n    console.log(data);\n  return (\n    <div>\n        {Object.keys(data).map(key => (\n            <TreeItem  nodeId={'i-'+data[key].id.toString()} onKeyDown={() => click_handler({text: data[key].text,updated: data[key].updated,user:data[key].user,created:data[key].created,uri:data[key].uri})} nodeId={data[key].id} label={<StyledAnnotation data={data[key]} click_handler={click_handler}/>} />\n      ))}\n\n    </div>\n  )\n}\n\n\n\n\n\nconst groupBy = (array, key) => {\n\n                      return array.reduce((result, currentValue) => {\n                        (result[eval('currentValue.'+key)] = result[eval('currentValue.'+key)] || []).push(\n                          currentValue\n                        );\n                        return result;\n                      }, {});\n                    };\n\n\n\nclass DyTree extends React.Component {\n    constructor() {\n        super();\n        // SET YOUR DATA\n        this.setState({\n                        loading: false,\n                        data:[],\n                        rowcount:0,\n                    })\n\n\n    }\n    componentDidUpdate(prevProps) {\n      let getstr=\"\";\n      console.log(\"got update--\");\n      let search_key=\"\";\n      console.log(prevProps.filter);\n      console.log(\"=\");\n      console.log(this.props.filter);\n\n      if (this.props.filter !== prevProps.filter) {\n         console.log(\"--got update2--\");\n         let config = {\n          headers: {'Accept': 'application/json',  'Authorization':  'Bearer 6879-lEKYN1uJ5X_gTVo5u6avX4-jAbUcY0EMFoKsakPIfug',}\n         };\n         //rerun query\n         console.log(\"swtich\");\n         console.log(this.props.filter);\n         switch (this.props.filter) {\n            case 'Users':\n                //this.state.columns=Users;\n                getstr = \"https://api.hypothes.is/api/search?group=\"+this.props.Super.state.groupId;\n                search_key=\"user\";\n                break;\n            case 'Document':\n               // this.state.columns=Documents;\n                getstr = \"https://api.hypothes.is/api/search?group=\"+this.props.Super.state.groupId;\n                search_key=\"uri\";\n                break;\n            case 'Week':\n                //this.state.columns=Week;\n                getstr = \"https://api.hypothes.is/api/search?group=\"+this.props.Super.state.groupId;\n                search_key=\"user\";\n                break;\n            case 'user':\n\n                break;\n            default:\n            // code block\n        }\n         console.log(\"running::\");\n         console.log(getstr);\n         this.setState({loading: true}, () => {\n            axios.get(getstr, config)\n                .then(response => {\n                    //...\n                    const ee =groupBy(response.data.rows,search_key);\n                    return (ee);\n                  })\n                .then(result => {\n                    //...\n                    this.setState({\n                        loading: false,\n                        data: result,\n                        rowcount:Object.keys(result).length,\n                    })\n                  })\n                .then(response2 => {\n                    //...\n                    this.props.updateTree(this.state);\n                });\n\n        });\n         console.log(\"it\");\n      }\n    }\n    componentDidMount() {\n        let config = {\n          headers: {'Accept': 'application/json',  'Authorization':  'Bearer 6879-lEKYN1uJ5X_gTVo5u6avX4-jAbUcY0EMFoKsakPIfug',}\n        };\n        console.log(\"this.props\");\n        console.log(this.props);\n         this.setState({loading: true}, () => {\n            axios.get(\"https://api.hypothes.is/api/search?group=\"+this.props.Super.state.groupId, config)\n                .then(response => {\n                    //...\n                    const ee =groupBy(response.data.rows,\"user\");\n                    return (ee);\n                  })\n                .then(result => {\n                    //...\n                    this.setState({\n                        loading: false,\n                        data: result,\n                        rowcount:Object.keys(result).length,\n                    })\n                  })\n                .then(response2 => {\n                    //...\n                    this.props.updateTree(this.state);\n                });\n\n        });\n         console.log(\"it\");\n\n\n\n    }\n     handleClick = (event) =>\n    {\n        console.log(\"click happened\");\n        console.log(event);\n        console.log(event.target);\n        this.props.onPanelClick(event);\n    }\n\n\n    render() {\n\n        let itemList=[];\n        if(this.state && this.state.rowcount>0){\n            let x=0;\n            Object.keys(this.state.data).forEach(key => {\n              let value = this.state.data[key];\n              console.log(\"here\");\n              console.log(value);\n                itemList.push(<TreeItem nodeId={'g-'+ x.toString()} label={key}><GroupedAnnotations data={value} click_handler={this.handleClick}  /></TreeItem>);\n                x++;\n            });\n            console.log(\"array\");\n            console.log(itemList);\n        }\n        else{\n\n        }\n\n\n\n        return (\n\n            <div>\n\n\n       <TreeView defaultCollapseIcon={<ExpandMoreIcon />} defaultExpandIcon={<ChevronRightIcon />}>\n\n       </TreeView>\n\n\n            <TreeView\n\n      defaultCollapseIcon={<ExpandMoreIcon />}\n      defaultExpandIcon={<ChevronRightIcon />}\n    >\n\n        {itemList}\n    </TreeView>\n            </div>\n        );\n    }\n}\nexport default DyTree;"],"sourceRoot":""}